{
	"info": {
		"_postman_id": "fdff938d-53fc-4540-b582-fc608b4e4e53",
		"name": "TEST_DATA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login and get token",
			"item": [
				{
					"name": "{{url}}/api/account/role/add",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df5d76c2-8d27-4d45-a2cd-1ccf8f3b7636",
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"token\",postman.getResponseHeader(\"Authorization\") );"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"PROGRAMMER\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/role/add",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"role",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/api/account/role/add Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df5d76c2-8d27-4d45-a2cd-1ccf8f3b7636",
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"token\",postman.getResponseHeader(\"Authorization\") );"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"CONTENT_MANAGER\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/role/add",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"role",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/api/account/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2dd62d70-2959-490f-abf2-fc9cfdd74cf6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"email\" : \"admin@gmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/api/account/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df5d76c2-8d27-4d45-a2cd-1ccf8f3b7636",
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"token\",postman.getResponseHeader(\"Authorization\") );"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"admin\",\n\t\"password\" : \"gomas\"\n\n}"
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "add user ",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"mbrito\",\n\t\"email\" : \"mbritogmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Users/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"mbrito\",\n\t\"email\" : \"mbritogmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Users/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user  1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"joao\",\n\t\"email\" : \"joao@gmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Users/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user  2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"maria\",\n\t\"email\" : \"maria@gmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Users/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user  3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"joana\",\n\t\"email\" : \"joana@gmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Users/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user  3 Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"teste1\",\n\t\"email\" : \"teste1@gmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Users/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user  3 Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"teste2\",\n\t\"email\" : \"teste2@gmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Users/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user  3 Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"teste3\",\n\t\"email\" : \"teste3@gmail.com\",\n\t\"password\" : \"gomas\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Users/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Users",
								"add"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2fcaf6ae-aebd-453f-bb0c-63952e2c91f9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f914edce-3b55-480b-954a-f2aefe66ed23",
						"type": "text/javascript",
						"exec": [
							"let reqBody = JSON.parse(request.data);",
							"console.log(reqBody);"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Difficulty",
			"item": [
				{
					"name": "{{url}}/api/database/difficulty/add",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Easy\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/difficulty/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"difficulty",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/api/database/difficulty/add Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Medium\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/difficulty/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"difficulty",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/api/database/difficulty/add Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Hard\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/difficulty/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"difficulty",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/api/database/difficulty/add Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Expert\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/difficulty/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"difficulty",
								"add"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test Cases",
			"item": [
				{
					"name": "add testcases - problem1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=1000\noutput=17",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "1000\n
								},
								{
									"key": "output",
									"value": "17"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases - problem1 Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=1000\noutput=17",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "1000\n
								},
								{
									"key": "output",
									"value": "17"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases - problem1 Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=1000\n562 1414 2665 6092 2616 9168 6232 7873 6007 3788 3620 8434 3266 9726 5612 5300 1276 3835 8753 3232 1917 5418 3272 4910 1731 1654 4691 5790 9162 6076 5234 6077 7490 4251 2169 6459 3419 8401 684 5778 8541 4304 565 1807 382 6177 3460 1658 12 2213 1242 8281 3983 4514 9543 5714 2521 4235 7856 1683 311 9442 7760 7801 46 6281 612 9817 1034 1296 5596 9575 1952 6161 1383 2335 8690 4843 345 5054 3408 1588 9688 7391 2454 9231 3106 4975 3466 7314 3011 3777 6757 7123 7931 3155 3405 8543 2972 791 6192 8568 367 8144 1081 8102 6831 9771 9297 7177 4826 2705 5117 4514 6448 7571 3745 9554 8899 7212 3221 1910 7341 6330 5385 5272 9485 8790 168 2457 5934 2712 7378 6301 856 8459 755 4040 4583 6404 7569 9409 5461 2686 275 1909 6609 4020 7816 1860 7584 1037 122 1278 7367 5508 6550 6852 650 3070 5661 6584 5782 3039 9237 2991 7851 9992 7031 2434 2748 4600 1843 8209 3638 2118 119 6599 2490 7935 8460 6427 8972 8582 7705 2691 4090 4255 5895 1093 3678 1556 7677 5812 948 6915 5155 8799 3259 8538 1233 6008 9490 9428 4217 3128 7898 688 9728 388 8623 4540 6815 3947 9474 4520 2990 9917 5128 8885 1010 5158 442 8687 7322 1390 1954 2478 6541 5214 1016 7774 1222 507 3554 1791 9987 1452 2480 6067 8192 7455 607 1360 7755 82 2232 745 9999 3712 5983 1009 5222 2777 6048 2545 519 8003 5023 7060 3217 6039 1186 791 2898 4740 8934 2886 2544 7766 8953 7088 1574 9561 4800 9329 5995 7033 6426 5994 7097 2409 3355 2320 5186 9403 4865 5705 7406 6240 2765 6975 8631 303 4118 1530 5043 3053 4416 3939 7171 3369 1028 8745 9282 5828 4426 5277 9213 853 7623 2663 3262 7330 4983 4801 6734 6200 506 492 8792 9624 3820 7423 9927 7938 8953 1323 7343 9721 5262 867 9443 2642 9612 8725 8471 4039 355 4036 4892 4330 6699 4506 1661 8034 9307 4747 586 6166 1591 9378 5790 5411 3154 2069 9702 2107 3392 3397 8181 8655 4264 7624 1297 229 2701 6120 4268 9408 6509 5512 3739 9560 6370 1752 7595 5678 6499 4533 1844 8090 3912 3986 9854 7066 6055 5908 5525 9448 9305 3706 4455 9922 7682 2104 151 384 4577 771 6144 1086 2635 6235 646 9005 7987 4593 4683 838 9127 2879 5281 9391 3217 5135 2809 5625 1043 8334 5073 6700 8393 5880 2974 2427 7984 9477 9163 8913 248 5308 9999 2883 1543 6998 1889 9531 7943 2924 369 7070 2156 5650 2813 5373 7137 5622 998 4532 309 2423 7585 8702 8303 559 7481 2640 37 6645 7905 285 1953 4257 9521 9848 1255 1410 9379 5550 686 6101 2621 2842 8103 1786 8216 1593 7409 5566 6125 7718 7990 3710 2772 2645 622 253 1637 659 6898 9543 7296 5203 3800 3169 5052 1407 931 783 6957 1618 3236 5930 4460 7692 7717 9028 9285 5126 4595 1762 9196 8937 1825 8320 1582 2447 8573 3220 9458 1824 2763 3106 3379 2915 6276 8431 4322 7207 5567 1279 5177 8803 7210 5990 6495 4927 1370 5780 6405 5965 7543 1953 1254 9368 273 2837 8167 5198 6057 7625 3374 5172 7083 6754 8087 3359 1537 2409 6919 7104 40 8448 5908 7250 4438 8755 8529 5809 4536 4934 8126 8431 3239 9381 4151 9864 8570 8670 5063 979 6295 4789 6151 3378 7895 590 3090 9433 9351 6361 2889 9391 4809 5149 6642 5600 3905 5171 7761 4793 6458 2239 9576 6049 1620 3727 5914 6542 2397 7329 7521 5044 8470 3672 4774 6366 614 4216 2151 9965 577 5040 9357 1739 6542 2351 7339 447 3874 1452 1592 6684 3691 1168 9086 1664 1247 5000 8206 9996 8681 5728 1392 7151 5752 2518 3517 6367 6735 2020 2684 3664 3413 8393 1755 9955 744 5446 6754 971 6898 8346 4007 590 5866 3093 2254 3465 8093 6812 9813 3126 2540 1205 278 4645 3723 147 7364 6810 2168 48 6827 1933 4794 8582 1888 1890 4029 8642 2861 7279 3340 6869 7869 5558 9962 6475 9023 4408 3288 5188 7534 2180 6393 4164 6825 6468 4312 541 9631 2832 590 6458 4765 5384 1392 3005 7274 1773 7999 6488 9053 1339 9709 3274 3249 6023 9750 8624 431 9390 3812 4318 7922 6557 4834 1100 9377 5498 1641 9008 8330 8583 1818 9447 3967 9563 8804 7594 1336 6803 434 389 8142 143 3664 1391 6166 9766 15 2950 5508 179 7268 3430 6736 2102 882 6114 7601 2524 1474 2283 7459 3293 8083 7779 9208 6887 5373 544 3691 5807 7286 8185 2302 7302 5929 8468 7068 2296 1418 8928 2476 5038 8710 5564 7141 9593 1678 1094 8469 3153 9729 2280 2798 7812 59 8358 1052 1784 8902 1095 3943 2540 9280 6245 9842 5209 4714 3262 3858 6132 8542 6334 7523 7253 1898 4664 3198 9929 2110 8019 9434 1839 299 8584 6004 359 6942 3408 2143 2196 4503 6087 4737 3783 8684 931 5345 3398 4194 9203 5883 2736 1889 3406 6341 139 4422 9539 6420 2884 3910 5854 4723 4210 4438 7079 921 7732 487 9416 9929 1342 1855 1018 5126 540 1949 6823 290 2495 2378 6173 1584 619 5931 7925 7110 6705 3817 3531 9589 4079 9385 665 8289 176 7744 5562 4260 4584 4979 4189 5926 6834 1559 7404 7374 3509 579 4017 2356 9309 190 3940 9928 2474 8218 7039 9179 8387 6922 5121 2466 2659 5786 7108 2835 3530 2670 3448 4466 4001 3989 393 836 5549 4149 4562 5410 4729 4931 7766 4038 5122 8059 319 3948 6277 3710 9479 1016 632 4600 3482 3291 386 590 2479 269 9613 5927 4735 3614 9916 1480 802 1817 1982 1717 7227 3063 6648 1346 3453 8122 9405 3772 8422 2034 7482 7902 3050 8114 8854 6532 7758 9241 3475 237 5862 9440 2516 597 9406&output=17",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "1000\n
								},
								{
									"key": "output",
									"value": "17"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases - problem1 Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=1000\noutput=17",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "1000\n
								},
								{
									"key": "output",
									"value": "17"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases 1 - problem 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=988\n454 9087 2397 2541 1459 483 3944 2437 6544 982 8902 576 9336 9672 7742 5982 8461 4640 9236 9248 8333 9742 6718 6213 4368 4553 7815 4666 433 4071 3173 7239 3159 1923 9780 4618 2406 76 3407 5302 1058 2309 2231 6746 8333 9973 2728 3146 965 1964 2394 9299 8058 9112 5512 2426 3666 9680 7093 4099 3751 6618 7690 3262 4893 3823 7880 3651 3899 7640 8954 4958 6301 1185 8056 4635 7510 785 7781 8476 9101 176 7775 7160 9288 9639 9586 9306 9319 3031 3405 9423 6002 7448 2685 895 1271 6918 4547 5170 910 3501 6480 7211 1038 4537 1846 4900 1674 5980 3376 7127 6156 7503 4287 1796 3495 226 1103 2814 3257 860 8589 9259 8308 7627 155 5931 897 1054 1102 1807 4555 3934 9018 1945 4823 7217 6845 6497 3197 6574 3625 5705 4077 4264 7501 7572 4490 4956 6739 4100 5817 1680 3359 477 9307 9866 6409 204 920 3863 8363 1827 4149 7382 124 8973 951 6970 1822 4148 9896 1799 6205 3973 6064 3706 7898 6906 5015 989 1006 832 9021 718 7661 8329 6936 4070 4885 4209 4285 3249 6036 4787 6983 2513 3760 4286 9483 1934 4786 9379 3734 991 9704 6150 1049 3954 9408 6064 1295 6767 3248 317 7485 910 4998 773 1332 9883 4982 1970 9484 7371 6757 2819 9884 517 3457 9367 8803 8243 5098 8889 9234 1154 5039 284 1461 800 2700 2756 7567 5949 9425 1404 6859 4423 2177 8191 659 7160 161 6495 4531 6918 5667 767 3787 9124 6486 8943 7368 1584 7832 2954 9090 2872 9590 551 24 2291 9660 7591 4592 9085 5347 1451 9861 7524 5994 6872 1036 2508 3367 1919 5778 5386 2686 9566 4511 9172 8509 8231 7108 2693 7537 2551 1917 7128 3102 1941 5771 9114 5884 363 8200 1231 8166 4413 5108 4160 1285 2496 3020 1004 4416 8799 6391 3454 4717 7254 8979 9578 1837 2439 2271 5726 4990 4189 2854 4445 6130 4977 3559 2015 1692 8111 3246 9858 2524 4706 371 161 7203 3391 1166 7971 2190 3909 7777 3259 7515 3108 2837 9352 5548 5109 1430 6890 9298 4285 1335 5428 5614 1247 3795 7307 9358 3394 3517 8235 8100 240 8396 5303 3632 5914 9626 2174 6175 7404 5434 3690 512 8271 9394 2412 9732 825 9303 9030 1462 6990 811 3428 8237 4606 735 3948 8000 605 2183 2453 845 6931 4108 829 9198 3735 9356 5373 7491 1142 5416 4355 5765 4810 6768 5498 1987 2423 4528 9801 5765 1691 3230 4003 6298 317 7951 650 922 6486 9455 8120 3417 3564 8949 2615 3651 4657 7989 1142 5799 9757 5497 1565 4567 8617 7063 2907 1040 7943 2708 6806 9635 2290 7161 2285 2608 1464 9287 9882 7950 8743 8002 7719 2307 3304 335 5958 7961 4676 3452 3761 4433 8949 1678 5352 3919 8741 4611 4959 3036 3672 8117 9023 5962 5278 7660 8570 3094 6948 4805 1044 5691 2807 5116 4350 2463 5451 6660 425 6479 112 538 7264 5413 2216 8968 9332 7309 9932 4292 6697 3604 8761 5721 9566 392 3381 4489 3486 329 9294 883 2372 8453 5999 6722 917 7802 3382 7694 633 9846 8232 4249 5260 448 3217 4592 4109 3149 5236 806 3105 350 2879 2672 742 6261 3513 580 2942 2807 1463 1667 1260 3814 4741 8529 1616 4476 6223 8601 4322 4455 2850 5934 1255 2420 527 5364 1921 2115 2523 5027 2465 5402 4051 3207 8015 7564 3788 7310 371 1603 8977 7983 5418 3718 6513 3386 8194 9088 1988 8869 3544 4838 4803 1151 7258 1682 2868 9180 3798 5391 4207 6263 7145 4610 5823 5161 2174 5963 8823 2545 7566 7800 6880 9336 7870 9745 2723 2417 8834 4711 1286 8730 9549 6089 9881 3160 4124 9101 2340 7922 4492 2899 537 7990 7509 6360 9503 9683 8675 8326 8580 2594 2478 1812 1930 348 1558 1005 2765 6744 5716 403 5474 1618 2845 1707 4778 6969 809 3470 4891 1653 2721 5428 5995 6582 8141 5498 2617 3168 176 7549 5762 2654 9361 4045 3003 7271 1402 2120 4015 3471 2524 5841 5089 5369 3901 6219 8690 1062 6041 3581 9067 8762 5361 5063 5344 9854 561 7961 9375 738 5510 1489 9744 1223 5534 2747 8495 3289 1220 8862 6760 3744 4704 1849 5465 4957 4420 4155 6019 461 4088 5086 9223 5801 149 919 5656 7063 5232 5031 4153 7094 6520 3897 8317 8407 6645 3164 1696 7865 2027 4808 7961 6731 3009 9778 8040 7429 285 4059 7890 4373 9145 3465 174 5647 736 2182 2710 2320 7213 6863 9414 86 760 7731 4845 3757 7248 6541 7974 9275 7701 2287 2358 710 2065 398 8139 2350 4457 2381 3075 9954 2198 9602 5601 2934 1784 8311 5254 5350 1526 1020 5436 2287 5103 6633 2396 2351 9526 371 1626 7227 9010 3984 7937 1076 734 6076 9778 1543 4809 2854 1498 7007 2456 7099 6293 592 1763 7899 5942 3289 8919 7730 1928 4022 4363 677 6374 3889 7400 4352 1116 6410 4689 5405 7486 5423 1481 3617 6967 6290 2823 4817 9649 1631 1916 5942 2223 31 3841 4518 9673 9112 8600 7953 3135 9316 8630 5861 3205 6030 6565 674 2441 1254 6079 6279 3030 3913 6248 6349 6555 9071 1166 6205 702 9434 8499 9278 9466 2341 148 5491 7805 8748 3444 940 8064 2075 3153 7622 4457 9719 4648 3250 973 7079 9530 4003 992 2130 352 3900 1202 7870 6457 8256 7305 4956 3886 3123 3649 4034 8614 1455 2783 2058 8747 7199 4133 1901 4821 4943 1620 9469 8193 8945 6549 4075 9301 3893 6206 6005 4145 3760 3876 602 8368 1181 5559 2255 4304 5560 2641 2918 7015 5424 1328 2115 8976 1814 4016 3797 6757 5636 9619 4950 933 2520 5378 234 2765 1584 6240 6911 5344 116 7513 64 7649 9424 2319&output=8",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "988\n454 9087 2397 2541 1459 483 3944 2437 6544 982 8902 576 9336 9672 7742 5982 8461 4640 9236 9248 8333 9742 6718 6213 4368 4553 7815 4666 433 4071 3173 7239 3159 1923 9780 4618 2406 76 3407 5302 1058 2309 2231 6746 8333 9973 2728 3146 965 1964 2394 9299 8058 9112 5512 2426 3666 9680 7093 4099 3751 6618 7690 3262 4893 3823 7880 3651 3899 7640 8954 4958 6301 1185 8056 4635 7510 785 7781 8476 9101 176 7775 7160 9288 9639 9586 9306 9319 3031 3405 9423 6002 7448 2685 895 1271 6918 4547 5170 910 3501 6480 7211 1038 4537 1846 4900 1674 5980 3376 7127 6156 7503 4287 1796 3495 226 1103 2814 3257 860 8589 9259 8308 7627 155 5931 897 1054 1102 1807 4555 3934 9018 1945 4823 7217 6845 6497 3197 6574 3625 5705 4077 4264 7501 7572 4490 4956 6739 4100 5817 1680 3359 477 9307 9866 6409 204 920 3863 8363 1827 4149 7382 124 8973 951 6970 1822 4148 9896 1799 6205 3973 6064 3706 7898 6906 5015 989 1006 832 9021 718 7661 8329 6936 4070 4885 4209 4285 3249 6036 4787 6983 2513 3760 4286 9483 1934 4786 9379 3734 991 9704 6150 1049 3954 9408 6064 1295 6767 3248 317 7485 910 4998 773 1332 9883 4982 1970 9484 7371 6757 2819 9884 517 3457 9367 8803 8243 5098 8889 9234 1154 5039 284 1461 800 2700 2756 7567 5949 9425 1404 6859 4423 2177 8191 659 7160 161 6495 4531 6918 5667 767 3787 9124 6486 8943 7368 1584 7832 2954 9090 2872 9590 551 24 2291 9660 7591 4592 9085 5347 1451 9861 7524 5994 6872 1036 2508 3367 1919 5778 5386 2686 9566 4511 9172 8509 8231 7108 2693 7537 2551 1917 7128 3102 1941 5771 9114 5884 363 8200 1231 8166 4413 5108 4160 1285 2496 3020 1004 4416 8799 6391 3454 4717 7254 8979 9578 1837 2439 2271 5726 4990 4189 2854 4445 6130 4977 3559 2015 1692 8111 3246 9858 2524 4706 371 161 7203 3391 1166 7971 2190 3909 7777 3259 7515 3108 2837 9352 5548 5109 1430 6890 9298 4285 1335 5428 5614 1247 3795 7307 9358 3394 3517 8235 8100 240 8396 5303 3632 5914 9626 2174 6175 7404 5434 3690 512 8271 9394 2412 9732 825 9303 9030 1462 6990 811 3428 8237 4606 735 3948 8000 605 2183 2453 845 6931 4108 829 9198 3735 9356 5373 7491 1142 5416 4355 5765 4810 6768 5498 1987 2423 4528 9801 5765 1691 3230 4003 6298 317 7951 650 922 6486 9455 8120 3417 3564 8949 2615 3651 4657 7989 1142 5799 9757 5497 1565 4567 8617 7063 2907 1040 7943 2708 6806 9635 2290 7161 2285 2608 1464 9287 9882 7950 8743 8002 7719 2307 3304 335 5958 7961 4676 3452 3761 4433 8949 1678 5352 3919 8741 4611 4959 3036 3672 8117 9023 5962 5278 7660 8570 3094 6948 4805 1044 5691 2807 5116 4350 2463 5451 6660 425 6479 112 538 7264 5413 2216 8968 9332 7309 9932 4292 6697 3604 8761 5721 9566 392 3381 4489 3486 329 9294 883 2372 8453 5999 6722 917 7802 3382 7694 633 9846 8232 4249 5260 448 3217 4592 4109 3149 5236 806 3105 350 2879 2672 742 6261 3513 580 2942 2807 1463 1667 1260 3814 4741 8529 1616 4476 6223 8601 4322 4455 2850 5934 1255 2420 527 5364 1921 2115 2523 5027 2465 5402 4051 3207 8015 7564 3788 7310 371 1603 8977 7983 5418 3718 6513 3386 8194 9088 1988 8869 3544 4838 4803 1151 7258 1682 2868 9180 3798 5391 4207 6263 7145 4610 5823 5161 2174 5963 8823 2545 7566 7800 6880 9336 7870 9745 2723 2417 8834 4711 1286 8730 9549 6089 9881 3160 4124 9101 2340 7922 4492 2899 537 7990 7509 6360 9503 9683 8675 8326 8580 2594 2478 1812 1930 348 1558 1005 2765 6744 5716 403 5474 1618 2845 1707 4778 6969 809 3470 4891 1653 2721 5428 5995 6582 8141 5498 2617 3168 176 7549 5762 2654 9361 4045 3003 7271 1402 2120 4015 3471 2524 5841 5089 5369 3901 6219 8690 1062 6041 3581 9067 8762 5361 5063 5344 9854 561 7961 9375 738 5510 1489 9744 1223 5534 2747 8495 3289 1220 8862 6760 3744 4704 1849 5465 4957 4420 4155 6019 461 4088 5086 9223 5801 149 919 5656 7063 5232 5031 4153 7094 6520 3897 8317 8407 6645 3164 1696 7865 2027 4808 7961 6731 3009 9778 8040 7429 285 4059 7890 4373 9145 3465 174 5647 736 2182 2710 2320 7213 6863 9414 86 760 7731 4845 3757 7248 6541 7974 9275 7701 2287 2358 710 2065 398 8139 2350 4457 2381 3075 9954 2198 9602 5601 2934 1784 8311 5254 5350 1526 1020 5436 2287 5103 6633 2396 2351 9526 371 1626 7227 9010 3984 7937 1076 734 6076 9778 1543 4809 2854 1498 7007 2456 7099 6293 592 1763 7899 5942 3289 8919 7730 1928 4022 4363 677 6374 3889 7400 4352 1116 6410 4689 5405 7486 5423 1481 3617 6967 6290 2823 4817 9649 1631 1916 5942 2223 31 3841 4518 9673 9112 8600 7953 3135 9316 8630 5861 3205 6030 6565 674 2441 1254 6079 6279 3030 3913 6248 6349 6555 9071 1166 6205 702 9434 8499 9278 9466 2341 148 5491 7805 8748 3444 940 8064 2075 3153 7622 4457 9719 4648 3250 973 7079 9530 4003 992 2130 352 3900 1202 7870 6457 8256 7305 4956 3886 3123 3649 4034 8614 1455 2783 2058 8747 7199 4133 1901 4821 4943 1620 9469 8193 8945 6549 4075 9301 3893 6206 6005 4145 3760 3876 602 8368 1181 5559 2255 4304 5560 2641 2918 7015 5424 1328 2115 8976 1814 4016 3797 6757 5636 9619 4950 933 2520 5378 234 2765 1584 6240 6911 5344 116 7513 64 7649 9424 2319"
								},
								{
									"key": "output",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases 2 - problem 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=500\noutput=1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "500\n
								},
								{
									"key": "output",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases 2 - problem 1 Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=500\noutput=1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "500\n
								},
								{
									"key": "output",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases 2 - problem 1 Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=500\noutput=1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "500\n
								},
								{
									"key": "output",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases 2 - problem 1 Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=500\noutput=1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "500\n
								},
								{
									"key": "output",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcases 2 - problem 1 Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/TestCases/add-deprecated?input=500\noutput=1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"TestCases",
								"add-deprecated"
							],
							"query": [
								{
									"key": "input",
									"value": "500\n
								},
								{
									"key": "output",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Problem",
			"item": [
				{
					"name": "add problem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b8e857b-4a3b-4ce1-87fa-2784d9a104ef",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"status code 200\", () => {",
									"    ",
									"})",
									"",
									"pm.test(\"correct data inserted\", () => {",
									"    pm.response.to.have.jsonBody(JSON.parse(request.data));",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 1\",\n\t\t\"description\" : \"Description of problem number 1, good luck and have fun! \\\\(x = b^2 - \\\\sqrt{\\\\frac{2a}{4c}} * 2^{3} - 3 * \\\\prod \\\\)\",\n\t\t\"maxScore\" : 100\n\t}, \"difficulty\" : {\n\t\t\"id\" : 1\n\t}, \"owner\" : {\n\t\t\"id\" : 1\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 2\",\n\t\t\"description\" : \"Description of problem number 2, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 2\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 3\",\n\t\t\"description\" : \"Description of problem number 3, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 3\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 4\",\n\t\t\"description\" : \"Description of problem number 4, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 1\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 5\",\n\t\t\"description\" : \"Description of problem number 5, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 1\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 6\",\n\t\t\"description\" : \"Description of problem number 6, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 1\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 7\",\n\t\t\"description\" : \"Description of problem number 7, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 3\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 8\",\n\t\t\"description\" : \"Description of problem number 8, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 1\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 9\",\n\t\t\"description\" : \"Description of problem number 9, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 2\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 10\",\n\t\t\"description\" : \"Description of problem number 10, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 4\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 12\",\n\t\t\"description\" : \"Description of problem number 10, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 2\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 13\",\n\t\t\"description\" : \"Description of problem number 10, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 4\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 14\",\n\t\t\"description\" : \"Description of problem number 10, good luck and have fun!\"\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 2\n\t}\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "sorting",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Sorting\",\n\t\t\"description\" :\"{\\\"blocks\\\":[{\\\"key\\\":\\\"do6e0\\\",\\\"text\\\":\\\"Dado um conjunto de elementos de tamanho \\\\\\\\(n\\\\\\\\), organize-os de forma crescente.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"5jqll\\\",\\\"text\\\":\\\"Tenha em considera\\u00E7\\u00E3o as restri\\u00E7\\u00F5es do problema e os formatos de input e output.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[{\\\"offset\\\":65,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"},{\\\"offset\\\":73,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"}],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"7s5qv\\\",\\\"text\\\":\\\"Bom trabalho.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"inputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"fjgl5\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"1cu52\\\",\\\"text\\\":\\\"\\\\\\\\(t_{1} \\\\\\\\, t_{2} \\\\\\\\, t_{3} \\\\\\\\, ... \\\\\\\\, t_{n}\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"outputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"85tp2\\\",\\\"text\\\":\\\"\\\\\\\\(1 \\\\\\\\, 2 \\\\\\\\, 3 \\\\\\\\, 4 \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"constraints\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"4dq9l\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\) - N\\u00FAmero de elementos do array \\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"497a\\\",\\\"text\\\":\\\"\\\\\\\\(t\\\\\\\\) - Elemento individual \\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"9orlm\\\",\\\"text\\\":\\\"\\\\\\\\(1 < n < 1000\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"6rjof\\\",\\\"text\\\":\\\"\\\\\\\\(1<t<1000\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"maxScore\" : 100\n\t\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 1\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "fibonacci sequence",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Fibonacci Sequence\",\n\t\t\"description\" :\"{\\\"blocks\\\":[{\\\"key\\\":\\\"se1c\\\",\\\"text\\\":\\\"Cada termo numa sequ\\u00EAncia de Fibonacci \\u00E9 gerado adicionando os 2 termos anteriores:\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"5amu9\\\",\\\"text\\\":\\\"\\\\\\\\( fibonacci(n) \\\\\\\\, = \\\\\\\\, fibonacci(n-1) + fibonacci(n-2) \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"ddhl0\\\",\\\"text\\\":\\\"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"fjom0\\\",\\\"text\\\":\\\"Crie uma solu\\u00E7\\u00E3o que gere o n\\u00FAmero de termos fibonacci pretendidos.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"4tund\\\",\\\"text\\\":\\\"Tenha em aten\\u00E7\\u00E3o as restri\\u00E7\\u00F5es e os formatos de input e output do problema.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[{\\\"offset\\\":48,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"},{\\\"offset\\\":56,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"}],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"76uns\\\",\\\"text\\\":\\\"Bom trabalho\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"inputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"6u13p\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"outputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"9qs6i\\\",\\\"text\\\":\\\"\\\\\\\\( t_{1} \\\\\\\\, t_{2} ... t_{n} \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"constraints\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"1da85\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\) - quantidade de n\\u00FAmeros de fibonacci pretendidos\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"emcnp\\\",\\\"text\\\":\\\"\\\\\\\\(t_{i}\\\\\\\\) - termo \\\\\\\\(i\\\\\\\\) de fibonaccci\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"70dr7\\\",\\\"text\\\":\\\"\\\\\\\\(1 < n < 60\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"e8ep3\\\",\\\"text\\\":\\\"\\\\\\\\(1 < t_{i} < 10^{12} \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"maxScore\" : 100\n\t\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 2\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit problem",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/edit?id=1&name=Minimum Distances&description=This is the description of the first problem. Good luck",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Minimum Distances"
								},
								{
									"key": "description",
									"value": "This is the description of the first problem. Good luck "
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "TestCases to Problem",
			"item": [
				{
					"name": "add testcase to problem",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=5",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=6",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=7",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=8",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=9",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "9"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add testcase to problem Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTestCase?problemId=1&testCaseId=10",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTestCase"
							],
							"query": [
								{
									"key": "problemId",
									"value": "1"
								},
								{
									"key": "testCaseId",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PractiseCategory",
			"item": [
				{
					"name": "add practisecategory",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Algorithms\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add practisecategory Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Machine Learning\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add practisecategory Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Artificial Intelligence\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add practisecategory Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Data Structures\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"add"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Language",
			"item": [
				{
					"name": "add language",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Java\",\n\t\"compilerName\" : \"Java 8\",\n\t\"mode\" : \"java\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Language/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Language",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add language Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"C++\",\n\t\"compilerName\" : \"C++11 (gcc 5.4.0)\",\n\t\"mode\" : \"c_cpp\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Language/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Language",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add language Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Python\",\n\t\"compilerName\" : \"Python 2.7\",\n\t\"mode\" : \"python\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Language/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Language",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add language Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"C#\",\n\t\"compilerName\" : \"C# (mono 4.2.1)\",\n\t\"mode\" : \"csharp\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Language/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Language",
								"add"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Problem To Category",
			"item": [
				{
					"name": "add problem to category Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add sorting to algorithms",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=14",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "14"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add fibonacci to algorithms",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=15",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=2&problemId=3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								},
								{
									"key": "problemId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=3&problemId=3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "3"
								},
								{
									"key": "problemId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=6",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=7",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=2&problemId=8",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								},
								{
									"key": "problemId",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=9",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "9"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=10",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=11",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "11"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add problem to category Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/practisecategory/edit?id=1&problemId=12",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"practisecategory",
								"edit"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "problemId",
									"value": "12"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Result",
			"item": [
				{
					"name": "add result Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Compiler Error\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Result/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Result",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add result Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Runtime Error\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Result/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Result",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add result Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Correct\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Result/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Result",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add result Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Incorrect\"\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Result/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Result",
								"add"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tournament",
			"item": [
				{
					"name": "add tournament",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6bdb798-7ae3-4669-bef5-c8ef1aac38ed",
								"type": "text/javascript",
								"exec": [
									"// example using pm.response.to.have",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Data Structures 101\",\n\t\"description\" : \"Register now to participate on a week long tournament to test your Data Structure knowledge.\",\n\t\"startingDate\" : \"2018-07-19\",\n\t\"endingDate\" : \"2018-07-31\",\n\t\"owner\" : {\n\t\t\"username\" : \"mbrito\"\n\t},\n\t\"showWebsite\" : true\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Tournament/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Tournament",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add tournament Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Algorithms 101\",\n\t\"description\" : \"Participate in a week long contest to test your algorithm implementation.\",\n\t\"startingDate\" : \"2018-07-07\",\n\t\"endingDate\" : \"2018-07-19\",\n\t\"owner\" : {\n\t\t\"username\" : \"admin\"\n\t},\n\t\"showWebsite\" : true\n\t\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Tournament/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Tournament",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add tournament Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Tournament Number 55\",\n  \"description\" : \"This is the description of the tournament number 55.\",\n  \"startingDate\" : \"2018-06-01T22:30:30\",\n  \"endingDate\" : \"2018-06-05T12:45:55\",\n  \"owner\" : {\n    \"username\" : \"admin\"\n  },\n  \"showWebsite\" : false\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Tournament/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Tournament",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "torneio para uso demonstração do rating",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\" : \"Tournament Number 4\",\n\t\"description\" : \"This is the description of the tournament number 4\",\n\t\"startingDate\" : \"2018-07-17T22:00:00\",\n\t\"endingDate\" : \"2018-07-17T22:35:00\",\n\t  \"owner\" : {\n    \"username\" : \"mbrito\"\n  },\n\t\"showWebsite\" : true\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Tournament/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Tournament",
								"add"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Add problems to tournament",
			"item": [
				{
					"name": "add ",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Tournament Number 1\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 1\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				},
				{
					"name": "add  Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Tournament Number 1\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 2\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				},
				{
					"name": "add  Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Tournament Number 1\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 3\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				},
				{
					"name": "add  Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Tournament Number 1\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 4\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				},
				{
					"name": "add  Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Tournament Number 1\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 5\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				},
				{
					"name": "add  Copy Copy Copy Copy Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Tournament Number 1\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Problem Number 6\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "add problems [problemas do torneio de demonstração]",
			"item": [
				{
					"name": "sorting Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Sorting Numbers\",\n\t\t\"description\" :\"{\\\"blocks\\\":[{\\\"key\\\":\\\"do6e0\\\",\\\"text\\\":\\\"Dado um conjunto de elementos de tamanho \\\\\\\\(n\\\\\\\\), organize-os de forma crescente.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"5jqll\\\",\\\"text\\\":\\\"Tenha em considera\\u00E7\\u00E3o as restri\\u00E7\\u00F5es do problema e os formatos de input e output.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[{\\\"offset\\\":65,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"},{\\\"offset\\\":73,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"}],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"7s5qv\\\",\\\"text\\\":\\\"Bom trabalho.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"inputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"fjgl5\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"1cu52\\\",\\\"text\\\":\\\"\\\\\\\\(t_{1} \\\\\\\\, t_{2} \\\\\\\\, t_{3} \\\\\\\\, ... \\\\\\\\, t_{n}\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"outputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"85tp2\\\",\\\"text\\\":\\\"\\\\\\\\(1 \\\\\\\\, 2 \\\\\\\\, 3 \\\\\\\\, 4 \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"constraints\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"4dq9l\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\) - N\\u00FAmero de elementos do array \\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"497a\\\",\\\"text\\\":\\\"\\\\\\\\(t\\\\\\\\) - Elemento individual \\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"9orlm\\\",\\\"text\\\":\\\"\\\\\\\\(1 < n < 1000\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"6rjof\\\",\\\"text\\\":\\\"\\\\\\\\(1<t<1000\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"maxScore\" : 100\n\t\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 1\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "fibonacci sequence Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Fibonacci\",\n\t\t\"description\" :\"{\\\"blocks\\\":[{\\\"key\\\":\\\"se1c\\\",\\\"text\\\":\\\"Cada termo numa sequ\\u00EAncia de Fibonacci \\u00E9 gerado adicionando os 2 termos anteriores:\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"5amu9\\\",\\\"text\\\":\\\"\\\\\\\\( fibonacci(n) \\\\\\\\, = \\\\\\\\, fibonacci(n-1) + fibonacci(n-2) \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"ddhl0\\\",\\\"text\\\":\\\"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"fjom0\\\",\\\"text\\\":\\\"Crie uma solu\\u00E7\\u00E3o que gere o n\\u00FAmero de termos fibonacci pretendidos.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"4tund\\\",\\\"text\\\":\\\"Tenha em aten\\u00E7\\u00E3o as restri\\u00E7\\u00F5es e os formatos de input e output do problema.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[{\\\"offset\\\":48,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"},{\\\"offset\\\":56,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"}],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"76uns\\\",\\\"text\\\":\\\"Bom trabalho\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"inputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"6u13p\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"outputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"9qs6i\\\",\\\"text\\\":\\\"\\\\\\\\( t_{1} \\\\\\\\, t_{2} ... t_{n} \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"constraints\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"1da85\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\) - quantidade de n\\u00FAmeros de fibonacci pretendidos\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"emcnp\\\",\\\"text\\\":\\\"\\\\\\\\(t_{i}\\\\\\\\) - termo \\\\\\\\(i\\\\\\\\) de fibonaccci\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"70dr7\\\",\\\"text\\\":\\\"\\\\\\\\(1 < n < 60\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"e8ep3\\\",\\\"text\\\":\\\"\\\\\\\\(1 < t_{i} < 10^{12} \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"maxScore\" : 100\n\t\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 2\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add fibonacci to tournament",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Algorithms 101\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Fibonacci\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				},
				{
					"name": "add sorting to tournament",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Algorithms 101\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Sorting Numbers\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				},
				{
					"name": "fibonacci sequence [rating]",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"problem\" : {\n\t\t\"name\" : \"Fibonacci Sequence Demo\",\n\t\t\"description\" :\"{\\\"blocks\\\":[{\\\"key\\\":\\\"se1c\\\",\\\"text\\\":\\\"Cada termo numa sequ\\u00EAncia de Fibonacci \\u00E9 gerado adicionando os 2 termos anteriores:\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"5amu9\\\",\\\"text\\\":\\\"\\\\\\\\( fibonacci(n) \\\\\\\\, = \\\\\\\\, fibonacci(n-1) + fibonacci(n-2) \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"ddhl0\\\",\\\"text\\\":\\\"\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"fjom0\\\",\\\"text\\\":\\\"Crie uma solu\\u00E7\\u00E3o que gere o n\\u00FAmero de termos fibonacci pretendidos.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"4tund\\\",\\\"text\\\":\\\"Tenha em aten\\u00E7\\u00E3o as restri\\u00E7\\u00F5es e os formatos de input e output do problema.\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[{\\\"offset\\\":48,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"},{\\\"offset\\\":56,\\\"length\\\":6,\\\"style\\\":\\\"ITALIC\\\"}],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"76uns\\\",\\\"text\\\":\\\"Bom trabalho\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"inputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"6u13p\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"outputFormat\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"9qs6i\\\",\\\"text\\\":\\\"\\\\\\\\( t_{1} \\\\\\\\, t_{2} ... t_{n} \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"constraints\" : \"{\\\"blocks\\\":[{\\\"key\\\":\\\"1da85\\\",\\\"text\\\":\\\"\\\\\\\\(n\\\\\\\\) - quantidade de n\\u00FAmeros de fibonacci pretendidos\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"emcnp\\\",\\\"text\\\":\\\"\\\\\\\\(t_{i}\\\\\\\\) - termo \\\\\\\\(i\\\\\\\\) de fibonaccci\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"70dr7\\\",\\\"text\\\":\\\"\\\\\\\\(1 < n < 60\\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}},{\\\"key\\\":\\\"e8ep3\\\",\\\"text\\\":\\\"\\\\\\\\(1 < t_{i} < 10^{12} \\\\\\\\)\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\n\t\t\"maxScore\" : 100\n\t\t\n\t}, \"difficulty\" : {\n\t\t\"id\" : 2\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "add fibonacci [rating] to tournament",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tournament\" : {\n\t\t\"name\" : \"Tournament Number 4\"\n\t},\n\t\"problem\" : {\n\t\t\"name\" : \"Fibonacci Sequence Demo\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/database/Problem/addTournament",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"database",
								"Problem",
								"addTournament"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8859a094-b91f-4c9d-a72e-eb036ac31ca7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "51589b09-e51e-40d2-8f57-9ce0fa1fb859",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0922ac01-5784-4673-95a0-1248397e71c0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4f3f97b4-b111-4bfa-bbe8-6b86bc5a3669",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"response is ok\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}